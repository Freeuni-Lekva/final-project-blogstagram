/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-07-15 14:02:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.user.edit.templates;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class editPassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<form id=\"edit-password-form\">\r\n");
      out.write("    <div class=\"row mb-4\">\r\n");
      out.write("        <div class=\"col-md-6\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"old_password\">Old Password</label>\r\n");
      out.write("                <input  type=\"password\" class=\"form-control\" name=\"old_password\" id=\"old_password\" required/>\r\n");
      out.write("                <div id=\"error-old_password\" class=\"text-danger\">\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"new_password\">New Password</label>\r\n");
      out.write("                <input type=\"password\" class=\"form-control\" name=\"new_password\" id=\"new_password\" required/>\r\n");
      out.write("                <div id=\"error-new_password\" class=\"text-danger\">\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"new_password_confirmation\">Confirm Password</label>\r\n");
      out.write("                <input type=\"password\" class=\"form-control\" name=\"new-password_confirmation\" id=\"new_password_confirmation\" required/>\r\n");
      out.write("                <div id=\"error-new_password_confirmation\" class=\"text-danger\">\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"col-md-6\">\r\n");
      out.write("            <p class=\"mb-2\">Password requirements</p>\r\n");
      out.write("            <p class=\"small text-muted mb-2\">To create a new password, you have to meet all of the following requirements:</p>\r\n");
      out.write("            <ul class=\"small text-muted pl-4 mb-0\">\r\n");
      out.write("                <li>Minimum 8 character</li>\r\n");
      out.write("                <li>At least one uppercase character</li>\r\n");
      out.write("                <li>At least one lowercase character</li>\r\n");
      out.write("                <li>At least one digit</li>\r\n");
      out.write("                <li>Canâ€™t be the same as a previous password</li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <hr class=\"my-4\"/>\r\n");
      out.write("    <div class=\"container text-center\">\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-primary\">Save Changes</button>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"passwordSuccess\" class=\"text-success text-center\">\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        let arePasswordListenersAdded = false;\r\n");
      out.write("        const passwordFields = [\"old_password\",\"new_password\",\"new_password_confirmation\"];\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function addPasswordFieldChangeListeners(){\r\n");
      out.write("            for(let field of passwordFields){\r\n");
      out.write("                document.getElementById(field).addEventListener('input',(e) => {\r\n");
      out.write("                    document.getElementById(`error-${field}`).textContent = '';\r\n");
      out.write("                    document.getElementById(field).classList.remove('is-invalid');\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        function refreshPasswordFieldMessages(){\r\n");
      out.write("            for(let field of passwordFields){\r\n");
      out.write("                document.getElementById(`error-${field}`).textContent = '';\r\n");
      out.write("                document.getElementById(field).classList.remove('is-invalid');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $(document).ready(function(){\r\n");
      out.write("            $(\"#edit-password-form\").submit(function(e){\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("                if(!arePasswordListenersAdded){\r\n");
      out.write("                    addPasswordFieldChangeListeners();\r\n");
      out.write("                    arePasswordListenersAdded = true;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                const status = \"EditPassword\";\r\n");
      out.write("\r\n");
      out.write("                let old_password = document.getElementById(\"old_password\").value;\r\n");
      out.write("                let new_password = document.getElementById(\"new_password\").value;\r\n");
      out.write("                let new_password_confirmation = document.getElementById(\"new_password_confirmation\").value;\r\n");
      out.write("\r\n");
      out.write("                $.post(\"/edit/profile\",{\r\n");
      out.write("                    old_password,new_password,new_password_confirmation,status\r\n");
      out.write("                    }\r\n");
      out.write("                ).then((rawResponse) => {\r\n");
      out.write("                    refreshPasswordFieldMessages();\r\n");
      out.write("                    if(rawResponse.length === 0){\r\n");
      out.write("                        document.getElementById(\"passwordSuccess\").innerText = \"Your password has been updated successfully!\";\r\n");
      out.write("                        setTimeout(() => {\r\n");
      out.write("                            location.reload();\r\n");
      out.write("                        },1500);\r\n");
      out.write("                    } else {\r\n");
      out.write("                        let errors = JSON.parse(rawResponse);\r\n");
      out.write("                        if(errors.status === 'status incorrect'){\r\n");
      out.write("                            console.log(\"Wrong status for editing profile\");\r\n");
      out.write("                        } else {\r\n");
      out.write("                            for(let error of errors){\r\n");
      out.write("\r\n");
      out.write("                                let {variableName, errorMessage} = error;\r\n");
      out.write("                                let errorID = \"error-\"+variableName;\r\n");
      out.write("                                document.getElementById(errorID).innerText += errorMessage+\"\\n\";\r\n");
      out.write("                                document.getElementById(variableName).classList.add('is-invalid');\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("\r\n");
      out.write("                    }\r\n");
      out.write("                })\r\n");
      out.write("\r\n");
      out.write("            })\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("    </script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
